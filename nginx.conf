user                 nginx;
pid                  /var/run/nginx.pid;
worker_processes     1;
worker_rlimit_nofile 65535;

events {
	worker_connections 65535;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;
    keepalive_timeout      65;

	include                mime.types;
    default_type           application/octet-stream;

    log_format  main    '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    access_log             /var/log/nginx/access.log main;
    error_log              /var/log/nginx/error.log warn;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    gzip                on;
    gzip_disable        "msie6";
    gzip_vary           on;
    gzip_proxied        any;
    gzip_comp_level     6;
    gzip_buffers        16 8k;
    gzip_http_version   1.1;
    gzip_min_length     1024;
    gzip_types          text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    proxy_cache_path /tmp/cache                     # Cache path
                     keys_zone=cache:10m            # Cache name
                     max_size=500m                  # Cache max size
                     inactive=72h;                  # Cache files deleted if not used within specified time
    proxy_cache_valid 300 301 302 303 304           # Do not cache 3xx HTTP codes
                      305 306 307 308 0m;
    proxy_cache_valid any 60m;                      # Cache files validity until specified time
                                                    # However, upstream's Cache-Control takes priority
                                                    # Use proxy_ignore_headers Cache-Control and Vary
                                                    # to override it.
    proxy_cache_use_stale error timeout             # Use cache if upstream is down
                          http_500 http_502
                          http_503 http_504;
    proxy_cache_key "$request_method$request_uri";  # Cache key

    proxy_http_version                 1.1;
    proxy_cache_bypass                 $http_upgrade;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_set_header Host              app-community.webflow.io;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  app-community.webflow.io;
    proxy_set_header X-Forwarded-Port  $server_port;
    proxy_connect_timeout              60s;
    proxy_send_timeout                 60s;
    proxy_read_timeout                 60s;
    proxy_ignore_headers               Vary;
    proxy_ignore_headers               Cache-Control;
    proxy_redirect                     off;
    proxy_ssl_server_name              on;

    sub_filter_once off;
    sub_filter_types text/html;
    sub_filter "https://app-community.webflow.io" "https://community.bz";

    upstream webflow {
        server app-community.webflow.io:443;
    }

    # DEFAULT DOMAIN
	server {
        listen 3333 default_server;
        server_name _;

        location /health {
            return 200;
        }

        add_header X-XSS-Protection        "1; mode=block" always;
        add_header X-Content-Type-Options  "nosniff" always;
        add_header Referrer-Policy         "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
        add_header Permissions-Policy      "interest-cohort=()" always;

        location ~ /\.(?!well-known) {
            deny all;
        }

        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://community.bz, https://www.community.bz';
                add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
                add_header 'Access-Control-Allow-Headers' '*';
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            resolver 8.8.8.8;
    
            proxy_pass https://webflow;
            proxy_cache cache;
        }
    }
}
